rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // default: no access for everyone
    match /{document=**} {
      allow read, write: if false;
      }

      

    // allow full private access to your own property
    match /users/{userID}/branches/{branchID} {
      allow read, write : if request.auth != null && request.auth.uid == userID
    }
    match /users/{userID}/journals/{journalID} {
      allow read, write : if request.auth != null && request.auth.uid == userID
    }
    match /users/{userID}/tasks/{taskID} {
      allow read, write : if request.auth != null && request.auth.uid == userID
    }
    match /users/{userID}/persons/{personID} {
      allow read, write : if request.auth != null && request.auth.uid == userID
    }
    match /users/{userID}/tags/{tagID} {
      allow read, write : if request.auth != null && request.auth.uid == userID
    }

    match /user/{userID}/privates/{privateID} {
      allow read, write : if request.auth != null && request.auth.uid == userID
    }

    match /user/{userID}/usersubscribe/{subID} {
      allow read: if request.auth != null && request.auth.uid == userID
    }





    // allow open read of your basic user info from all valid users 
    match /users/{userID} {
      allow read : if request.auth != null
    }

    match /users/{userID}/branches/{branchID} {
      // allow read and update to the branch info from invited members
      allow read, update : if request.auth != null && request.auth.uid in request.resource.data.memberIDs
      
      // allow open read if the branch is public
      allow read : if request.auth != null && request.resource.data.openess == "Public"


      // allow read and create messages if you are the invited member
      match /messages/{messageID} {
        allow read, create: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/users/$(userID)/branches/$(branchID)).data.memberIDs
      }

      // allow open read and create in the comments
      match /comments/{commentID}{
        allow read, create: if request.auth != null && get(/databases/$(database)/documents/users/$(userID)/branches/$(branchID)).data.openess == "Public"
      }


    }
  }
}
